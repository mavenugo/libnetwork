---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: libnetwork
  namespace: kube-system

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: dnet-config
  namespace: kube-system
data:
  cluster_store: "etcd://10.96.0.2:6666"
  cni_config: |-
    {
      "cniVersion": "0.2.0",
      "name": "dnet-bridge",
      "type": "dnet-cni",
      "ipam": {
              "preferred-pool": "10.22.0.0/16"
      }
    }
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: libnetwork-etcd
  namespace: kube-system
  labels:
    k8s-app: libnetwork-etcd
spec:
  template:
    metadata:
      labels:
        k8s-app: libnetwork-etcd
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      nodeSelector:
        node-role.kubernetes.io/master: ""
      hostNetwork: true
      containers:
      - name: libnetwork-etcd
        env:
          - name: LIBNETWORK_ETCD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        command: ["sh","-c"]
        # Since ETCD will be running only on master for libnetwork using args to start the etcd instance
        # in order to pass the environment variable for --advertise-client-urls
        args: ["/usr/local/bin/etcd --name=libnetwork-etcd --data-dir=/var/etcd/ --listen-client-urls=http://0.0.0.0:6666 --listen-peer-urls=http://0.0.0.0:6667 --advertise-client-urls=http://${LIBNETWORK_ETCD_IP}:6666"]
        image: gcr.io/google_containers/etcd-amd64:3.0.17
        livenessProbe:
          failureThreshold: 8
          httpGet:
            host: 127.0.0.1
            path: /health
            port: 6666
            scheme: HTTP
          initialDelaySeconds: 15
          timeoutSeconds: 15
        volumeMounts:
        - name: var-etcd
          mountPath: /var/lib/etcd
      volumes:
        - name: var-etcd
          hostPath:
            path: /var/libnetwork/etcd
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: libnetwork-etcd
  name: libnetwork-etcd
  namespace: kube-system
spec:
  selector:
    k8s-app: libnetwork-etcd
  clusterIP: 10.96.0.2
  ports:
    - port: 6666
---

kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: libnetwork
  namespace: kube-system
  labels:
    k8s-app: libnetwork
spec:
  selector:
    matchLabels:
      k8s-app: libnetwork
  template:
    metadata:
      labels:
        k8s-app: libnetwork
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        scheduler.alpha.kubernetes.io/tolerations: |
          [{"key":"CriticalAddonsOnly", "operator":"Exists"}]
    spec:
      hostNetwork: true
      hostPID: true
      serviceAccountName: libnetwork
      containers:
        - name: libnetwork-dnet
          image: mavenugo/dnet:tp1.1
          env:
            - name: DNET_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: DNET_DISCOVERY
              valueFrom:
                configMapKeyRef:
                  name: dnet-config
                  key: cluster_store
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /home/libnetwork/
              name: var-libnetwork
              readOnly: false
            - mountPath: /var/run
              name: var-run
              readOnly: false
            - name: run
              mountPath: /run/netns/

        - name: libnetwork-cniserver
          image: mavenugo/ln-cniserver:tp1.1
          env:
            - name: DNET_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: DNET_CNI_CONF
              valueFrom:
                configMapKeyRef:
                  name: dnet-config
                  key: cni_config
          securityContext:
            privileged: true

          volumeMounts:
            - mountPath: /opt/cni/bin
              name: cni-bin-dir
              readOnly: false
            - mountPath: /etc/cni/net.d/
              name: etc-cni-dir
              readOnly: false
            - mountPath: /home/libnetwork/
              name: var-libnetwork
              readOnly: false
            - mountPath: /var/run
              name: var-run
              readOnly: false

      volumes:
        - name: cni-bin-dir
          hostPath:
            path: /opt/cni/bin
        - name: etc-cni-dir
          hostPath:
            path: /etc/cni/net.d/
        - name: var-libnetwork
          hostPath:
            path: /var/libnetwork/
        - name: var-run
          hostPath:
            path: /var/run
        - name: run
          hostPath:
            path: /run/netns

---
